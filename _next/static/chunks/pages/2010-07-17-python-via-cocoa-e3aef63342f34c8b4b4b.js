_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{BRIV:function(t,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return m}));var o=n("1OyB"),r=n("vuIU"),a=n("Ji7U"),c=n("md7G"),i=n("foSv"),s=n("q1tI"),u=n.n(s),l=n("Oqge"),p=n("wOhW"),f=n("wXCX"),h=u.a.createElement;function d(t){var e=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,o=Object(i.a)(t);if(e){var r=Object(i.a)(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return Object(c.a)(this,n)}}var m=function(t){Object(a.a)(n,t);var e=d(n);function n(){return Object(o.a)(this,n),e.apply(this,arguments)}return Object(r.a)(n,[{key:"render",value:function(){return h(p.a,{title:"Python via Cocoa"},h("h2",null,"Python via Cocoa"),h(f.a,{posted:"07 Jul 2010"}),h("p",null,"I have an idea for a Cocoa front-end around a Python script that I recently came across. As you may or may not be aware Cocoa has the concept of a ",h("a",{href:"https://developer.apple.com/library/mac/DOCUMENTATION/Cocoa/Conceptual/ScriptingBridgeConcepts/Introduction/Introduction.html"},"scripting bridge")," for Python. However, almost all of the examples I could find were to allow Python to use Cocoa as a GUI interface basically. But I want to do is the other way around, use Python for it\u2019s engine from Cocoa. Google being the amazing search engine that it is helped me to find an example that describes\xa0",h("a",{href:"http://www.informit.com/blogs/blog.aspx?uk=Ask-Big-Nerd-Ranch-Adding-Python-Scripting-to-Cocoa-apps"},"exactly that"),". Using that example I was able to break out the basic concept and build a very simple app that calls a Python script from Cocoa. The python script just calls ls and is then able to print the output back into my Cocoa app\u2019s text view. So the bridge allows a two way communication from Cocoa to Python and back again. This is very cool stuff. Here is a screen shot of my little test app"),h("p",null,h("img",{src:"/images/rover.png",alt:"Rover test app"})),h("p",null,"Here is the Cocoa script that I executed in it\u2019s entirety:"),h("figure",{className:"highlight"},h("pre",null,h("code",null,"#\n#  RoverExecutor.py\n#  Rover\n#\n#  Created by Ricky Nelson on 7/16/10.\n#\nfrom Foundation import *\nfrom AppKit import *\n\nimport subprocess\n\nclass PythonExecutor(NSObject):\n  @classmethod\n  def main_(self, args):\n    textView = args[0];\n    path = args[1]\n    p = subprocess.Popen('ls /', shell=True, stdout=subprocess.PIPE).stdout\n    textView.textStorage().mutableString().setString_(p.read())\n    return YES"))),h("p",null,"Now that I have a basic understanding of how it all works I can move on to building my little UI."),h(l.a,null))}}]),n}(s.Component)},Oqge:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var o=n("1OyB"),r=n("vuIU"),a=n("Ji7U"),c=n("md7G"),i=n("foSv"),s=n("q1tI"),u=n.n(s).a.createElement;function l(t){var e=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,o=Object(i.a)(t);if(e){var r=Object(i.a)(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return Object(c.a)(this,n)}}var p=function(t){Object(a.a)(n,t);var e=l(n);function n(){return Object(o.a)(this,n),e.apply(this,arguments)}return Object(r.a)(n,[{key:"disqus",value:function(){if("undefined"!==typeof document){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src="//socketwiztechnicalblog.disqus.com/embed.js",(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(t)}}},{key:"componentDidMount",value:function(){this.disqus()}},{key:"render",value:function(){return u("div",null,u("div",{id:"disqus_thread"}))}}]),n}(s.Component)},Y8iQ:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/2010-07-17-python-via-cocoa",function(){return n("BRIV")}])},wXCX:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var o=n("1OyB"),r=n("vuIU"),a=n("Ji7U"),c=n("md7G"),i=n("foSv"),s=n("q1tI"),u=n.n(s).a.createElement;function l(t){var e=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,o=Object(i.a)(t);if(e){var r=Object(i.a)(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return Object(c.a)(this,n)}}var p=function(t){Object(a.a)(n,t);var e=l(n);function n(){return Object(o.a)(this,n),e.apply(this,arguments)}return Object(r.a)(n,[{key:"twitterShare",value:function(t,e){if("undefined"!==typeof document){var n,o=document.getElementsByTagName(t)[0],r=/^http:/.test(document.location)?"http":"https";document.getElementById(e)||((n=document.createElement(t)).id=e,n.src=r+"://platform.twitter.com/widgets.js",o.parentNode.insertBefore(n,o))}}},{key:"componentDidMount",value:function(){this.twitterShare("script","twitter-wjs")}},{key:"render",value:function(){var t=this.props.posted;return u("div",null,u("p",{className:"blog-post-meta"},u("span",{className:"glyphicon glyphicon-calendar"})," ",t," ",u("a",{href:"https://twitter.com/share",className:"twitter-share-button","data-via":"socketwiz"},"Tweet")))}}]),n}(s.Component)}},[["Y8iQ",0,1,2]]]);